package sort;

public class MargeSort {
 
	static void margeSort(int[] a, int low, int high) {
		
		//더이상 나눌 인덱스가 없다면(배열의 원소가 1개일 때)
		if(low<high) {
			int mid=(low+high)/2;
			
			//분할그룹의 왼쪽
			margeSort(a,low,mid);
			
			//분할그룹의 오른쪽
			margeSort(a,mid+1,high);
		
			//양쪽을 정렬
			marge(a,low,mid,high);
		}
	}
	
	static void marge(int[] a,int low,int mid, int high) {
		int[] tmp=new int[a.length];//정렬된 원소들을 임시저장할 배열
		int i=low;//배열의 시작인덱스
		int j=mid+1;//배열의 중간 다음 인덱스
		int k=0;//임시배열에 쓸 인덱스 변수
		
		//한쪽배열이 전멸할 때까지
		while(i<=mid&&j<=high) {
			if(a[i]<=a[j]){
				tmp[k]=a[i];
				i++;
				k++;
			}else {
				tmp[k]=a[j];
				j++;
				k++;
			}
		}
		
		//왼쪽 배열이 전멸했다면
		while(i<=mid) {
			tmp[k]=a[i];
			i++;
			k++;
		}
		
		//오른쪽 배열이 전멸했다면
		while(j<=high) {
			tmp[k]=a[j];
			j++;
			k++;
		}
		
		k--;
		//임시배열에서 진짜 배열로 옮김
		while(k>=0) {
			a[low+k]=tmp[k];
			k--;
		}
 	}
	
	static void printAll(int[] arr,String msg) {
		System.out.printf("%s:",msg);
		for(int i=0;i<arr.length;i++){
			System.out.printf("\t %d",arr[i]);
		}
	}
	public static void main(String[] args) {
		int[] arr={20,10,70,80,40,90};
		String msg="정렬 전";
		printAll(arr,msg);
		margeSort(arr, 0, arr.length-1);
		msg="정렬 후";
		printAll(arr,msg);

	}

}
