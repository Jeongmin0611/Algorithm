package sort;
import java.util.Random;

public class QuickSort {
		//난수 배열을 생성하는 메소드
		void createRandomNumber(int[] arr) {
			Random ran=new Random();
			for(int i=0;i<arr.length;i++){
				arr[i]=ran.nextInt(300)+1;
			}
		}
			//				배열	 왼쪽		오른쪽
		void quickSort(int[] arr,int l,int r) {
			
			if(l<r){//원소 인덱스가 1개가 될 때까지
				
				int pivot=partition(arr,l,r);
				
				quickSort(arr,l,pivot-1);
				quickSort(arr,pivot+1,r);
				
			}
		}
		
		int partition(int[]arr,int l,int r) {
			int pivot=arr[r];//가장 맨 오른쪽에 있는 인덱스를 피봇으로 잡음.
			int i=(l-1);//피봇보다 작은 인덱스의 갯수를 알려주는 용도의 변수
			
			for(int j=l;j<=r-1;j++){
				if(arr[j]<=pivot){//피봇 인덱스 원소보다 해당 원소가 작다면
					i++;//피봇보다 작은 원소의 갯수 증가
					
					//스왑
					int tmp=arr[j];
					arr[j]=arr[i];
					arr[i]=tmp;
				}
				//마지막남은 가장 큰 원소를 피봇 인덱스의 원소와 스왑
				int tmp=arr[i+1];
				arr[i+1]=arr[r];
				arr[r]=tmp;
			}
			return 0;
		}
		
	
		void printArray(int[] arr){
			int t=0;
			for(int a:arr){
				if(t==5) {
					System.out.printf("%s ",a);
				}else {
					System.out.printf("%s, ",a);
					t++;
				}
				
			}
			
		}
	
		public static void main(String[] args) {
			QuickSort qs=new QuickSort();
			
	
		}

}
